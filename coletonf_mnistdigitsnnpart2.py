# -*- coding: utf-8 -*-
"""ColetonF_MNISTDigitsNNpart2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Zh52MufOz7Of67MMlpAXfaab1euNqYH
"""

!pip install Keras
!pip install Tensorflow

from keras.datasets import mnist
from keras import models
from keras import layers
import keras.utils
from tensorflow.keras import utils as np_utils
from keras.utils.np_utils import to_categorical

(train_images, train_labels), (test_images, test_labels)=mnist.load_data()

print(train_labels[3])

network = models.Sequential()
network.add(layers.Dense(784, activation= 'relu', input_shape=(28 * 28,)))
network.add(layers.Dense(784, activation= 'relu', input_shape=(28 * 28,)))
network.add(layers.Dense(10, activation= 'softmax'))
network.compile(optimizer='adam',
                loss = 'categorical_crossentropy',
                metrics=['accuracy'])

network=models.Sequential()

network.add(layers.Dense(784,activation= 'relu', input_shape=(28 * 28,)))
network.add(layers.Dense(784,activation= 'relu', input_shape=(28 * 28,)))
network.add(layers.Dense(10,activation= 'softmax'))


network.compile(optimizer='adam',
                loss = 'categorical_crossentropy',
                metrics=['accuracy'])

train_images = train_images.reshape((60000, 28* 28))
train_images = train_images.astype('float32') / 255
test_images = test_images.reshape((10000, 28* 28))
test_images = test_images.astype('float32') / 255

train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)
print(train_labels[2])

network.fit(train_images, train_labels, epochs=5, batch_size=128)