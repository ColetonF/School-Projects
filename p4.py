# -*- coding: utf-8 -*-
"""p4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16zdGOh3c7m-WxiajNel0-XdbgIIujDNY
"""

import random
courseList=[110,213,315,316,412,121,223,326,328,422,136,238,335,336,432,140,243,345,346,448,150,253,355,356,452]
prereq=[[110,213],[316,412],[223,326],[328,422],[136,238],[243,345],[253,355],[356,452]]
pre=[213,412,326,422,238,345,355,452]
class Person:
  name=None
  def __init__(self,name):
    self.name=name
  def getName(self):
    return self.name
  
class Student(Person):
  stuID=None
  finishedCourseList=[]
  selectedCourseList=[]
  classPool=[]
  def __init__(self,name,id,fin):
    super().__init__(name)
    self.stuID=id
    self.finishedCourseList=fin
    self.selectedCourseList=[]
    self.classPool=self.genClassPool()

  def genClassPool(self):
    classPool = []
    for c in courseList:
      classPool.append(c)
    for course in self.finishedCourseList:
      classPool.remove(course)
    return classPool

  def getFinishedCourseList(self):
    return self.finishedCourseList

  def getName(self):
    return self.name

  def getStuID(self):
    return self.stuID
  
  def getSelectedCourse(self):
    return self.selectedCourseList

  def sendCourseRegistrationRequest(self,adv):
    count=0
    while count<3:
      classChoice = self.updateSelectedCourse()
      if adv.approveSelectedCourse(classChoice,self.finishedCourseList) == True:
        count+=1
        self.selectedCourseList.append(classChoice)
      self.classPool.remove(classChoice)#remove class choice from pool so not selected again

  def updateSelectedCourse(self):
    index = random.randrange(0,len(self.classPool))
    return self.classPool[index]




class Advisor(Person):
  
  def approveSelectedCourse(self,courseChoice,finishedCourses):
    if courseChoice not in pre:
      return True
    else:
      for course in prereq:
        if course[1] == courseChoice:
          if course[0] in finishedCourses:
            return True
          else:
            return False
      return False


stuList=["Alice","Bob","Cindy","David","Ellen","Frank","Grace","Hellen"]
stuObj=[]
idCount=0

def finSelect():
  finList=[]
  finCount=0
  while finCount<3:
    index = random.randrange(0,len(courseList))
    if (courseList[index]<400) and (courseList[index] not in pre) and (courseList[index] not in finList):
      finList.append(courseList[index])
      finCount+=1
  return finList

adv = Advisor("Phil")

for i in stuList:
  stuObj.append(Student(i,idCount,finSelect()))
  print("Name: ",end="")
  print(stuObj[idCount].getName())
  print("Finished course list:",end="")
  print(stuObj[idCount].getFinishedCourseList())
  stuObj[idCount].sendCourseRegistrationRequest(adv)
  print(stuObj[idCount].getSelectedCourse())


  idCount+=1